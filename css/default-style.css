@media only screen and (max-width: 1920px)
{
	.canvas_box {
		width: 1440px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 1440px;
		height: 855px;
	}
}
@media only screen and (max-width: 1440px)
{
	.canvas_box {
		width: 1280px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 1280px;
		height: 760px;
	}
}
@media only screen and (max-width: 1280px)
{
	.canvas_box {
		width: 1024px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 1024px;
		height: 608px;
	}
}
@media only screen and (max-width: 1024px)
{
	.canvas_box {
		width: 640px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 640px;
		height: 380px;
	}

}
@media only screen and (max-width: 640px)
{
	.canvas_box {
		width: 512px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 512px;
		height: 304px;
	}
}
@media only screen and (max-width: 512px)
{
	.canvas_box {
		width: 480px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 480px;
		height: 285px;
	}
}
@media only screen and (max-width: 480px)
{
	.canvas_box {
		width: 320px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 320px;
		height: 190px;
	}
}
@media only screen and (max-width: 320px)
{
	.canvas_box {
		width: 256px;
		margin: 0 auto 0 auto;
	}
	.canvas {
		width: 256px;
		height: 152px;
	}
}

html, body {
	margin: 0 0 0 0;
	padding: 0 0 0 0;
	overflow: hidden;
}

.screen {
	width: 100vw;
	height: 100vh;
	display: flex;
	flex-direction: column;
	overflow: hidden;
}

.title {
	text-align: center; 
	font-size: x-large; 
	background: #000000; 
	color: #ffffff; 
	width: 100%;
	margin: 0 0;
}

.message_box {
	flex-grow: 1;
	overflow-y: auto;
	box-sizing: border-box;
	background: #000000; 
	color: #ffffff; 
	text-align: left; 
	font-size: large;
	width: calc(100% - 1em);
	margin: 0 0.5em 0 0.5em;
}

.credit_box {
	background: #000000; 
	color: #ffffff; 
	text-align: left; 
	font-size: large;
	width: calc(100% - 1em);
	padding: 0 0.5em 0 0.5em;
}

.control_box {
	position: relative;
	width: calc(100% - 1em);
	font-size: medium;
	margin: 0 0.5em 0 0.5em;
}

.txt {
	display: inline-block;
	width: calc(100% - 4.5em);
	padding: 0.5em;
	border: 1px solid #999;
	box-sizing: border-box;
	background: #f2f2f2;
	font-size: large;
	margin: 0.5em 0;
}	

.switch_box {
	position: relative;
	width: calc(100% - 1.4em);
	background-color: slategray;
	margin: 0 0.5em 0 0.5em;
	padding: 0.2em 0.2em;
}

.switch {
	position: relative;
	background-color: slategray;
}

.switch_label {
	display: flex;
	align-items: center;
	color: cornsilk;
	background-color: slategrey;
	width: 6em;
}

.switch input[type='checkbox'] {
	position: absolute;
	width: 0;
	height: 0;
}

.switch .base {
	width: 2.2em;
	border-radius: 1.1em;
	height: 1.2em;
	background-color: #ddd;
}

.switch .circle {
	position: absolute;
	top: 0.1em;
	left: 0.2em;
	width: 1em;
	height: 1em;
	border-radius: 0.5em;
	background-color: white;
	transition: 0.5s;
}

.label {
	margin-left: 0.5em;
}

.switch input:checked ~ .base {
	background-color: rgb(219, 234, 254);
	transition: 0.5s;
}

.switch input:checked ~ .circle {
	transform: translateX(100%);
	background-color: blue;
}

/* クレジットロール全体を画面中央に固定 */
#credits_container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.95); /* 半透明の暗い背景 */
    color: white;
    overflow: hidden; /* スクロールバー非表示 */
    display: none; /* 初期状態では非表示 */
    z-index: 1000; /* 他の要素より手前に表示 */
}

/* クレジットの内容のスタイル */
#credits_content {
    /* 画面下端から開始するため、初期位置を設定 */
    /*
    position: absolute;
    bottom: 0;
    */
    width: 100%;

    /* テキストを中央揃え */
    text-align: center;
    font-family: sans-serif;
    padding: 0 20px;

    /* アニメーションを初期状態では適用しない */
    animation: none;
    /* 🔴 初期状態では、コンテンツ全体を画面下に配置する */
    transform: translateY(100vh);
    /* 100vh は画面の高さの100%分下へ移動することを意味します */
}

/* クレジットの内容のフォント装飾 */
#credits-content h1 {
    font-size: 2.5em;
    margin-top: 50px;
    color: #ffd700; /* ゴールド */
}

#credits-content h2 {
    font-size: 1.5em;
    margin-top: 40px;
    border-bottom: 1px solid #ffffff60;
    padding-bottom: 5px;
}

#credits-content p {
    font-size: 1.2em;
    margin: 5px 0;
}

/* スクロールアニメーションの定義 */
/* contentの高さを利用して、画面外へ完全に移動させる */
@keyframes scrollUp {
    from {
        /* 初期位置: 画面下端（bottom: 0） */
        transform: translateY(0);
    }
    to {
        /* 終了位置: 要素自身の高さ分だけ上に移動 */
        /* translateY(-100%) は要素の高さの -100% を意味します */
        transform: translateY(-100%);
    }
}

/* テーマ関連 */

.dark-theme {
	background-color: #121212;
	color: #f0f0f0;
}

/* 基本のボタン要素のスタイル (ライトモード) */
button {
  padding: 8px 15px;
  border: 1px solid #aaa;
  background-color: #f0f0f0; /* 明るい背景 */
  color: #333333;           /* 濃い文字色 */
  cursor: pointer;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #e0e0e0;
}

/* bodyに .dark-theme が付いたときのボタンのスタイル (ダークモード) */
.dark-theme button {
  border: 1px solid #555;
  background-color: #505050; /* 暗い背景 */
  color: #ffffff;           /* 明るい文字色 */
}

.dark-theme button:hover {
  background-color: #6a6a6a;
}

.button_container {
  /* 1. Flexbox を有効にする */
  display: flex;

  /* 2. 子要素（<form>タグ）を中央に寄せる */
  justify-content: center;

  /* 3. ボタンとボタンの間にスペースを空ける (任意) */
  gap: 20px;
}

/* フォーム要素が横幅いっぱいに広がらないようにする (任意) */
/* Flexアイテムのデフォルトは stretch ですが、ここでは内容物の幅に合わせます */
.button_container form {
    /* フォームはデフォルトで block 要素なので、Flexboxアイテムとして機能します */
    /* 特に何も設定しなくても、通常は横並びになります */
}

/* JavaScriptから渡された --scroll-distance を使うカスタムアニメーション */
@keyframes scrollUpCustom {
    from {
        /* 画面下端（bottom: 0） */
        transform: translateY(100vh);
    }
    to {
        /* JSで計算された「コンテンツ高さ + 画面高さ」分だけ上に移動 */
        transform: translateY(var(--scroll-distance));
    }
}
